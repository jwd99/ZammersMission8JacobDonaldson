@page "/admin/books"
@page "/admin"

@inherits OwningComponentBase<IZammerRepo>


<table class="table table-dark table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Author</th>
            <th>Publisher</th>
            <th>Isbn</th>
            <th>Classification</th>
            <th>Category</th>
            <th>Page Count</th>
            <th>Price</th>
            <td></td>
            <td></td>
        </tr>
    </thead>

    <tbody>
        @if (BookData?.Count() > 0)
        {
            @foreach (Book b in BookData)
            {
                <tr>
                    <td>@b.BookId</td>
                    <td>@b.Title</td>
                    <td>@b.Author</td>
                    <td>@b.Publisher</td>
                    <td>@b.Isbn</td>
                    <td>@b.Classification</td>
                    <td>@b.Category</td>
                    <td>@b.PageCount</td>
                    <td>@b.Price.ToString("c")</td>
                    <td> <NavLink class="btn btn-primary btn-sm" href="@GetDetailsUrl(b.BookId)">Details</NavLink></td>
                    <td> <NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(b.BookId)">Edit</NavLink></td>
                    <td><button class="btn btn-danger btn-sm" @onclick="@(x=>DeleteBook(b))">Delete</button></td>
                  
                </tr>

            }
        }
            else
            {
                <tr>
                    <td colspan="12" class="text-center text-capitalize">No Books</td>
                </tr>
            }
    </tbody>
</table>

<NavLink class="btn btn-dark" href="/admin/books/create">Create</NavLink>
<br />
<br />
<br />
<br />
<br />
@code {

    public IZammerRepo repo => Service;
    public IEnumerable<Book> BookData { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        BookData = await repo.Books.ToListAsync();
    }
    public async Task DeleteBook(Book b)
    {
        repo.DeleteBook(b);
        await UpdateData();
    }
    public string GetDetailsUrl(long id) => $"/admin/books/details/{id}";
    public string GetEditUrl(long id) => $"/admin/books/edit/{id}";

}
